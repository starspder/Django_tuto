"""
Django settings for locallibrary project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/


: 웹 사이트의 모든 설정을 포함함. 어플리케이션, 정적 파일의 위치, 데이터베이스 세부 설정등 등록하는 파일
LANGUAGE_CODE = 'ko-kr' : 한글로 번역이 되어서 나옴
TIME_ZONE = 'Asia/Seoul' : 데이터베이스 연동시간 서울표준시간으로 나옴

"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent # 프로젝트 루트 폴더


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d93yh^(+kyok6f&fd=xzxy+xg=yyh&xzkqja-a($%m4ol%fsw2' # 보안을 위해 사용

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # 디버그 모드 설정 , True인 경우 오류 메시지 즉시 확인 가능, 배포 시에는 False로 바꿈

ALLOWED_HOSTS = [] # 현재 서비스의 호스트를 정함, 개발 시에는 비움, Debug=False, ALLOWED_HOSTS가 비워있으면 서비스 실행 X


# Application definition

"""
장고 웹 서비스는 다양한 앱의 결합으로 만들어짐. 현재 프로젝트에서 사용하는 앱의 목록을 기록하고 관리함

작성하고 추가 할 앱 또한 이곳에 추가해줘야함

보통 application의 적는 순서는 
1. local apps
2. 3rd-party apps
3. django apps
권장함
"""
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'catalog.apps.CatalogConfig', # 어플리케이션 객체를 지정하게 됨. 어플리케이션이 생성될때 catalog/apps.py안에 생성
]


"""
장고의 모든 요청/응답 메시지 사이에 실행되는 특수한 프레임워크임

주로 보안에 관한 내용이 많음

"""
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

"""
기준이 되는 urls.py 경로를 설정함

"""
ROOT_URLCONF = 'locallibrary.urls'

"""
장고에서 사용하는 템플릿 시스템에 관한 설정, 해석 엔진과 폴더의 경로등을 변경하는데 사용

"""
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'locallibrary.wsgi.application' # wsgi 어플리케이션 설정


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation, 비밀번호 검증 설정, 기본적은 검증 로직이 들어가 있음
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization, 다국어 관한 설정
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'
#TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
